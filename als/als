#!/usr/bin/env ruby
# frozen_string_literal: true

COMMANDS = {
  add: 'add',
  delete: 'del',
  change: 'chg'
}.freeze

SHELL_BIN = {
  'zsh' => '~/.zshrc',
  'bash' => '~/.bashrc'
}.freeze

USAGE_MESSAGE = <<~USAGE
  Usage: als add name value
         als del name
USAGE

def add_alias(name, aliases_file)
  value = ARGV[2..-1].join(' ')
  File.open(aliases_file, 'a') { |file| file.puts "alias #{name}='#{value}'" }
end

def delete_alias(name, aliases_file)
  lines = File.readlines(aliases_file).reject { |line| line.start_with?("alias #{name}=") }
  File.open(aliases_file, 'w') { |file| file.write(lines.join) }
end

def aliases_file(path)
  path && File.expand_path(path)
end

shell = ENV['SHELL'] && File.basename(ENV['SHELL'])
aliases_file = aliases_file(SHELL_BIN[shell])
unless aliases_file && File.exist?(aliases_file)
  puts "Shell '#{shell}' is not supported"
  exit
end

aliases_file = aliases_file(ENV['ALIASES_FILE'])
unless aliases_file && File.exist?(aliases_file)
  puts 'Aliases file not found'
  exit
end

command, name = ARGV

case command
when COMMANDS[:add]
  add_alias(name, aliases_file)
when COMMANDS[:delete]
  delete_alias(name, aliases_file)
when COMMANDS[:change]
  delete_alias(name, aliases_file)
  add_alias(name, aliases_file)
else
  puts USAGE_MESSAGE
end
