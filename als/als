#!/usr/bin/env ruby
# frozen_string_literal: true

require 'fileutils'

COMMANDS = {
  add: 'add',
  delete: 'del',
  change: 'chg'
}.freeze

SHELL_CONFIGS = {
  'zsh' => '~/.zshrc',
  'bash' => '~/.bashrc'
}.freeze

USAGE_MESSAGE = <<~USAGE
  Usage: als add name value
         als del name
         als chg name value
USAGE

def add_alias(name, aliases_file)
  value = ARGV[2..].join(' ')
  File.write(aliases_file, "alias #{name}='#{value}'", mode: 'a')
end

def delete_alias(name, aliases_file)
  lines = File.readlines(aliases_file).reject { |line| line.start_with?("alias #{name}=") }
  File.write(aliases_file, lines.join)
end

def aliases_file(path)
  path && File.expand_path(path)
end

def shell_config
  current_shell = ENV.fetch('SHELL', nil)
  shell = current_shell && File.basename(current_shell)

  aliases_file(SHELL_CONFIGS[shell]).tap do |shell_config|
    unless shell_config
      puts "Shell '#{shell}' is not supported"
      exit
    end
  end
end

aliases_file = ENV['ALIASES_FILE'] ? aliases_file(ENV['ALIASES_FILE']) : shell_config
FileUtils.touch(aliases_file) unless aliases_file && File.exist?(aliases_file)

command, name = ARGV

case command
when COMMANDS[:add]
  add_alias(name, aliases_file)
when COMMANDS[:delete]
  delete_alias(name, aliases_file)
when COMMANDS[:change]
  delete_alias(name, aliases_file)
  add_alias(name, aliases_file)
else
  puts USAGE_MESSAGE
end
