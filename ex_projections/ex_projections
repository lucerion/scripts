#!/usr/bin/env ruby
# frozen_string_literal: true

require 'json'

EXCLUDED_DIRS = %w[. ..].freeze

PROJECT_TEMPLATE = {
  'lib/*.ex' => { 'alternate' => 'test/{}_test.exs' },
  'test/*_test.exs' => { 'alternate' => 'lib/{}.ex' }
}.freeze

def umbrella_template
  (Dir.entries('./apps') - EXCLUDED_DIRS).each_with_object({}) do |dir, template|
    template["apps/#{dir}/lib/*.ex"] = { 'alternate' => "apps/#{dir}/test/{}_test.exs" }
    template["apps/#{dir}/test/*_test.exs"] = { 'alternate' => "apps/#{dir}/lib/{}.ex" }
  end
end

def template
  if Dir.exist?('./apps')
    umbrella_template
  elsif Dir.exist?('./lib')
    PROJECT_TEMPLATE
  else
    {}
  end
end

if template.empty?
  puts 'Not an Elixir project'
  exit
end

File.write('.projections.json', JSON.pretty_generate(template))
