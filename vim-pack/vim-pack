#!/usr/bin/env ruby
# frozen_string_literal: true

COMMANDS = {
  add: 'add',
  delete: 'del'
}.freeze

USAGE_MESSAGE = <<~USAGE
  Usage: vim-pack add PACKAGE username/repository
                  del PACKAGE plugin
                  del PACKAGE
USAGE

GITHUB = 'https://github.com'

command, package, plugin = ARGV

unless COMMANDS.include?(command) || package
  puts USAGE_MESSAGE
  exit
end

def add_plugin(package, repo)
  plugin = repo.split('/')[1]

  unless plugin
    puts "Repo '#{repo}' is not valid"
    return
  end

  plugin_directory = File.expand_path("~/.vim/pack/#{package}/start/#{plugin}")
  `git clone #{GITHUB}/#{repo} #{plugin_directory}`
end

def delete_plugin(package, plugin)
  plugin_directory = File.expand_path("~/.vim/pack/#{package}/start/#{plugin}")
  `rm -rf #{plugin_directory}`
end

def delete_package(package)
  package_directory = File.expand_path("~/.vim/pack/#{package}")
  `rm -rf #{package_directory}`
end

case command
when COMMANDS[:add]
  add_plugin(package, plugin)
when COMMANDS[:delete]
  plugin ? delete_plugin(package, plugin) : delete_package(package)
else
  puts USAGE_MESSAGE
end
